version: 2

defaults: &defaults
  working_directory: ~/picassojs
    # Available images https://hub.docker.com/r/circleci/node/tags/
  docker:
    - image: circleci/node:8.9.4-browsers

jobs:
  install:
    <<: *defaults
    steps:
      - checkout

      # Restore caches
      - restore_cache:
          key: v1-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-cache-picasso.js-{{ checksum "packages/picasso.js/package-lock.json" }}
      - restore_cache:
          key: v1-cache-hammer-{{ checksum "plugins/hammer/package-lock.json" }}
      - restore_cache:
          key: v1-cache-q-{{ checksum "plugins/q/package-lock.json" }}
      - restore_cache:
          key: v1-cache-docs-{{ checksum "docs/package-lock.json" }}
      - restore_cache:
          key: v1-cache-site-{{ checksum "website/package-lock.json" }}

      - run: npm install
      - run: npm run bootstrap

    ## Save to cache
      - save_cache:
          key: v1-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: v1-cache-picasso.js-{{ checksum "packages/picasso.js/package-lock.json" }}
          paths:
            - ./packages/picasso.js/node_modules
      - save_cache:
          key: v1-cache-hammer-{{ checksum "plugins/hammer/package-lock.json" }}
          paths:
            - ./plugins/hammer/node_modules
      - save_cache:
          key: v1-cache-q-{{ checksum "plugins/q/package-lock.json" }}
          paths:
            - ./plugins/q/node_modules
      - save_cache:
          key: v1-cache-docs-{{ checksum "docs/package-lock.json" }}
          paths:
            - ./docs/node_modules
      - save_cache:
          key: v1-cache-site-{{ checksum "website/package-lock.json" }}
          paths:
            - ./website/node_modules

      - store_artifacts:
          path: package.json

      - persist_to_workspace:
          root: ~/picassojs
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run link
      - run: npm run build
      - store_artifacts:
          path: packages/picasso.js/dist
      - store_artifacts:
          path: plugins/q/dist
      - store_artifacts:
          path: plugins/hammer/dist
      - persist_to_workspace:
          root: ~/picassojs
          paths:
            - packages/*/dist
            - plugins/*/dist
            - docs/dist
            - docs/spec.json

  docs-website:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run build:website
      - store_artifacts:
          path: docs/spec.json
      - store_artifacts:
          path: website/build
      - persist_to_workspace:
          root: ~/picassojs
          paths:
            - website/build/

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run link
      - run: npm run lint

  test-unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run link
      - run: npm run test:unit:coverage
      - run: 
          name: Publish coverage
          command: npm run test:unit:coverage:publish || echo "Unable to publish code coverage"
      - store_artifacts:
          path: coverage

  test-component:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run link
      - run: npm run test:component:coverage

  test-integration:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run: npm run link
      - run: npm run test:integration:local

  deploy-docs:
    docker:
      - image: cibuilds/aws:1.14.38
    working_directory: ~/picassojs
    steps:
      - attach_workspace:
          at: ~/picassojs
      - run:
          name: Deploy to S3 ...
          command: aws s3 sync website/build/picasso.js/ s3://picassojs.com/ --delete

workflows:
  version: 2
  build-all:
    jobs:
      - install
      - build:
          requires:
            - install
      - lint:
          requires:
            - install
      - test-unit:
          requires:
            - install
      - test-component:
          requires:
            - install
      - test-integration:
          requires:
            - build
      - docs-website:
          requires:
            - build
      - deploy-docs:
          requires:
            - docs-website
            - lint
            - test-unit
            - test-component
            - test-integration
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
