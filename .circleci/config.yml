version: 2

jobs:
  build:
    working_directory: ~/picassojs
    # Available images https://hub.docker.com/r/circleci/node/tags/
    docker:
      - image: circleci/node:8.9.4-browsers
    branches:
      ignore: gh-pages
    steps:
      - checkout

      # Restore caches
      - restore_cache:
          key: v1-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-cache-picasso.js-{{ checksum "packages/picasso.js/package-lock.json" }}
      - restore_cache:
          key: v1-cache-hammer-{{ checksum "plugins/hammer/package-lock.json" }}
      - restore_cache:
          key: v1-cache-q-{{ checksum "plugins/q/package-lock.json" }}
      - restore_cache:
          key: v1-cache-docs-{{ checksum "docs/package-lock.json" }}
      - restore_cache:
          key: v1-cache-site-{{ checksum "website/package-lock.json" }}

      # Build all
      - run:
          name: Build all
          command: ./scripts/build-all.sh

      ## Save to cache
      - save_cache:
          key: v1-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: v1-cache-picasso.js-{{ checksum "packages/picasso.js/package-lock.json" }}
          paths:
            - ./packages/picasso.js/node_modules
      - save_cache:
          key: v1-cache-hammer-{{ checksum "plugins/hammer/package-lock.json" }}
          paths:
            - ./plugins/hammer/node_modules
      - save_cache:
          key: v1-cache-q-{{ checksum "plugins/q/package-lock.json" }}
          paths:
            - ./plugins/q/node_modules
      - save_cache:
          key: v1-cache-docs-{{ checksum "docs/package-lock.json" }}
          paths:
            - ./docs/node_modules
      - save_cache:
          key: v1-cache-site-{{ checksum "website/package-lock.json" }}
          paths:
            - ./website/node_modules
      
      # Code validation
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Unit test
          command: npm run test:unit:coverage
      - run:
          name: Component test
          command: npm run test:component:coverage
      - run:
          name: Integration test
          command: npm run test:integration:local
      # - run:
      #     name: Publish coverage to code climate
      #     command: npm run test:unit:coverage:publish

      # Store artifacts
      - store_artifacts:
          path: package.json
      - store_artifacts:
          path: packages/picasso.js/dist
      - store_artifacts:
          path: plugins/q/dist
      - store_artifacts:
          path: plugins/hammer/dist
      - store_artifacts:
          path: website/build
      - store_artifacts:
          path: docs/spec.json
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: packages/picasso.js/test/integration/artifacts

